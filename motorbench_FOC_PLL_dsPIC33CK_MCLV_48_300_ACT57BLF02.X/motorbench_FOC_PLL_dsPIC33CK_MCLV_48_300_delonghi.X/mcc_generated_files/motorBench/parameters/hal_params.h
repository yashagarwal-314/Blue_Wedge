/* This is an autogenerated file from a template. Do not edit this file as it will be overwritten.*/
/**
 *
 * hal_params.h
 *
 * Hardware abstraction layer parameters that depend on calculated values
 *
 * Component: HAL
 */ /*
 *
 * Motor Control Application Framework
 * R7/RC37 (commit 116330, build on 2023 Feb 09)
 *
 * (c) 2017 - 2023 Microchip Technology Inc. and its subsidiaries. You may use
 * this software and any derivatives exclusively with Microchip products.
 *
 * This software and any accompanying information is for suggestion only.
 * It does not modify Microchip's standard warranty for its products.
 * You agree that you are solely responsible for testing the software and
 * determining its suitability.  Microchip has no obligation to modify,
 * test, certify, or support the software.
 *
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES,
 * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
 * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
 * AND FITNESS FOR A PARTICULAR PURPOSE, OR ITS INTERACTION WITH
 * MICROCHIP PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY
 * APPLICATION.
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL,
 * PUNITIVE, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF
 * ANY KIND WHATSOEVER RELATED TO THE USE OF THIS SOFTWARE, THE
 * motorBench(R) DEVELOPMENT SUITE TOOL, PARAMETERS AND GENERATED CODE,
 * HOWEVER CAUSED, BY END USERS, WHETHER MICROCHIP'S CUSTOMERS OR
 * CUSTOMER'S CUSTOMERS, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES OR THE DAMAGES ARE FORESEEABLE. TO THE
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL
 * CLAIMS IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT
 * OF FEES, IF ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS
 * SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF
 * THESE TERMS.
 *
 *
 ******************************************************************************/
#ifndef __HAL_PARAMS_H
#define __HAL_PARAMS_H

#ifdef  __cplusplus
extern "C" {
#endif

/* Dead time in PWM clock cycles */
#define HAL_PARAM_DEADTIME_COUNTS             118      // Q0(118.00000)  = +590.00000 ns          = +590.00000 ns          + 0.0000%
/* PWM period register value in PWM clock cycles */
#define HAL_PARAM_PWM_PERIOD_COUNTS          5000      // Q0(5000.00000) =  +25.00000 us          =  +25.00000 us          + 0.0000%
/*
 * (please note: in center-aligned mode this represents
 * one half-period of the actual PWM waveforms; 
 * see DS70645C section 14.5.5 on Center-Aligned PWM
 * for more information)
 */
/* ADC sampling delay */
#define HAL_PARAM_ADC_TRIGGER_DELAY             0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%

/* ------------ other parameters ------------ */

/*
 * Minimum and maximum duty cycles, 
 * from the perspective of the PWM duty cycle registers.
 *
 * The actual minimum and maximum duty cycles created by the PWM generators
 * will have dead time (=0.0118) added and subtracted.
 *
 * NOTE: this assumes identical dead time,
 * and no significant difference in propagation delay between gate drive channels.
 * 
 * Effective limits for duty cycle as seen on the PWM outputs:
 * Minimum duty cycle on PWMxH: 0.014
 * Minimum duty cycle on PWMxL: 0.055
 * Maximum duty cycle on PWMxH: 0.9214
 * Maximum duty cycle on PWMxL: 0.9624
 */

/* The minimum duty cycle of the half-bridge affects
 * the minimum duty cycle of upper transistors
 * and maximum duty cycle of lower transistors.
 */
/* Minimum duty cycle register value in counts */
#define HAL_PARAM_MIN_DUTY_COUNTS             129      // Q0(129.00000)  =  +25.80000 m           =  +25.80000 m           + 0.0000%
/* Minimum duty cycle register value, as ratio */
#define HAL_PARAM_MIN_DUTY_Q15                845      // Q15(  0.02579) =  +25.78735 m           =  +25.80000 m           - 0.0490%
/* Maximum low-side duty cycle register value in counts */
#define HAL_PARAM_MAX_LOWER_DUTY_COUNTS       4871      // Q0(4871.00000) = +974.20000 m           = +974.20000 m           + 0.0000%


/* The maximum duty cycle of the half-bridge affects
 * the maximum duty cycle of upper transistors
 * and minimum duty cycle of lower transistors.
 */
/* Maximum duty cycle register value in counts */
#define HAL_PARAM_MAX_DUTY_COUNTS            4666      // Q0(4666.00000) = +933.20000 m           = +933.20000 m           + 0.0000%
/* Maximum duty cycle register value, as ratio */
#define HAL_PARAM_MAX_DUTY_Q15              30579      // Q15(  0.93320) = +933.19702 m           = +933.20000 m           - 0.0003%
/* Minimum low-side duty cycle register value in counts */
#define HAL_PARAM_MIN_LOWER_DUTY_COUNTS        334      // Q0(334.00000)  =  +66.80000 m           =  +66.80000 m           - 0.0000%

/** DAC value for triggering an overcurrent fault on the lvmc-33ck board.
 */
#define HAL_PARAM_DAC_OVERCURRENT_THRESHOLD 0

/** Is double-update PWM allowed?
 *  (Some estimator algorithms are not compatible)
 */
inline static bool MCAF_IsDoubleUpdatePwmAllowed()
{
  return true;
}

#ifdef  __cplusplus
}
#endif

#endif // __HAL_PARAMS_H
